{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/components/CompanySearchForm.js\";\nimport React, { Component } from \"react\"; // import { v4 as uuidv4 } from 'uuid';\n\nimport CompanyList from './CompanyList';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'; // component needs to provide a search form, then display any search results after input is sumbitted.\n// results list should save information to state but only show current search results\n// on submit form information needs to be fetched\n\nconst API_KEY = 'CZMRTN1SEP2UQCBY'; // const BASE_URL =\n//   'https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=' +\n//   `api-key=${NYT_API_KEY}&query=`;\n\nexport default class CompanySearchForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      symbol: \"\",\n      searchResultsList: []\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        symbol: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${this.state.symbol}&apikey=${API_KEY}`).then(res => res.json()) // .then((data) => console.log(data));\n      .then(data => {\n        const companies = Object(data.bestMatches);\n        this.setState({\n          searchResultsList: companies\n        });\n      });\n    };\n  }\n\n  renderCompanyList() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.searchResultsList.map(company => /*#__PURE__*/_jsxDEV(CompanyList, {\n        companySymbol: company[\"1. symbol\"],\n        companyName: company[\"2. name\"],\n        companyType: company[\"3. type\"],\n        companyRegion: company[\"4. region\"],\n        companyCurrency: company[\"8. currency\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        style: {\n          width: '30rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"SearchForm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter any symbol or letter\",\n            name: \"symbol\",\n            value: this.state.symbol,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Search by letter or full company name for some specific symbols or companies.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderCompanyList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n{\n  /* <form onSubmit={this.handleSubmit}>\n     <input \n         type=\"text\" \n         name=\"symbol\" \n         value={this.state.symbol} \n         onChange={this.handleChange}\n     />\n     <button type=\"submit\">Search</button>\n  </form> */\n}","map":{"version":3,"sources":["/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/components/CompanySearchForm.js"],"names":["React","Component","CompanyList","Form","Button","API_KEY","CompanySearchForm","state","symbol","searchResultsList","handleChange","event","setState","target","value","handleSubmit","preventDefault","fetch","then","res","json","data","companies","Object","bestMatches","renderCompanyList","map","company","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from 'uuid';\nimport CompanyList from './CompanyList';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n// component needs to provide a search form, then display any search results after input is sumbitted.\n// results list should save information to state but only show current search results\n// on submit form information needs to be fetched\n\nconst API_KEY = 'CZMRTN1SEP2UQCBY';\n// const BASE_URL =\n//   'https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=' +\n//   `api-key=${NYT_API_KEY}&query=`;\n\nexport default class CompanySearchForm extends Component {\n    state = {\n          symbol: \"\",\n          searchResultsList: []\n    }\n\n    handleChange = event => {\n        this.setState({\n            symbol: event.target.value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n       \n        fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${this.state.symbol}&apikey=${API_KEY}`)\n            .then((res) => res.json())\n            // .then((data) => console.log(data));\n            .then(data => {\n                const companies = Object(data.bestMatches);\n                this.setState({ \n                    searchResultsList: companies\n            })\n        })\n    }\n\n    renderCompanyList() {\n        return (\n            <>\n                {this.state.searchResultsList.map((company) => (\n                    <CompanyList \n                        companySymbol={company[\"1. symbol\"]} \n                        companyName={company[\"2. name\"]}\n                        companyType={company[\"3. type\"]}\n                        companyRegion={company[\"4. region\"]}\n                        companyCurrency={company[\"8. currency\"]}\n                    />\n                ))}\n            </>\n        )\n    }\n\n    render() {\n        return (\n            <>\n                <Form onSubmit={this.handleSubmit} style={{ width: '30rem'}}>\n                    <Form.Group controlId=\"SearchForm\">\n                        <Form.Label>Search</Form.Label>\n                        <Form.Control \n                                type=\"text\" \n                                placeholder=\"Enter any symbol or letter\" \n                                name=\"symbol\" \n                                value={this.state.symbol} \n                                onChange={this.handleChange}\n                                />\n                        <Form.Text className=\"text-muted\">\n                            Search by letter or full company name for some specific symbols or companies. \n                        </Form.Text>\n                    </Form.Group>\n\n                    <Button variant=\"dark\" type=\"submit\">\n                        Search\n                    </Button>\n                </Form>\n                <br/>\n                <div>\n                    {this.renderCompanyList()}\n                </div>\n            </>\n        );\n    };\n}\n\n{/* <form onSubmit={this.handleSubmit}>\n    <input \n        type=\"text\" \n        name=\"symbol\" \n        value={this.state.symbol} \n        onChange={this.handleChange}\n    />\n    <button type=\"submit\">Search</button>\n</form> */}\n\n"]},"metadata":{},"sourceType":"module"}