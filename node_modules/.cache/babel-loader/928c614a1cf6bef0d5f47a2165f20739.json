{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/containers/CompanyChartContainer.js\";\nimport React, { Component } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport { store } from '../store';\nconst apiKey = process.env.API_KEY;\nexport default class CompanyChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: '100 Day, Daily Historical Data',\n          data: [],\n          fill: false,\n          backgroundColor: 'rgb(54, 162, 235)',\n          borderColor: 'rgba(54, 162, 235, 0.2)'\n        }]\n      },\n      chartOptions: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: false\n            }\n          }]\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${store.currentCompanySymbol}&apikey=${apiKey}`).then(res => res.json()).then(data => {// const objectKeys = (Object.keys(data[\"Time Series (Daily)\"])).slice(0,30)\n      // const objectData = (Object.values(data[\"Time Series (Daily)\"])).slice(0,30)\n      // const mappedData = objectData.map((closeData) => closeData[\"4. close\"])\n      // console.log(objectKeys)\n      // this.setState({ \n      //     chartData: {\n      //         labels: objectKeys,\n      //         datasets: [\n      //             {\n      //                 label: '30 Day, Daily Historical Data',\n      //                 data: mappedData,\n      //                 fill: false,\n      //                 backgroundColor: 'rgb(54, 162, 235)',\n      //                 borderColor: 'rgba(54, 162, 235, 0.2)',\n      //             },\n      //         ]\n      //     }\n      // })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: this.state.chartData,\n        options: this.state.chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n} // When loading the page from scratch the chart data does not load properly.","map":{"version":3,"sources":["/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/containers/CompanyChartContainer.js"],"names":["React","Component","Line","store","apiKey","process","env","API_KEY","CompanyChart","state","chartData","labels","datasets","label","data","fill","backgroundColor","borderColor","chartOptions","scales","yAxes","ticks","beginAtZero","componentDidMount","fetch","currentCompanySymbol","then","res","json","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAA3B;AAEA,eAAe,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC5CQ,KAD4C,GACpC;AACJC,MAAAA,SAAS,EAAE;AACPC,QAAAA,MAAM,EAAE,EADD;AAEPC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,gCADX;AAEIC,UAAAA,IAAI,EAAE,EAFV;AAGIC,UAAAA,IAAI,EAAE,KAHV;AAIIC,UAAAA,eAAe,EAAE,mBAJrB;AAKIC,UAAAA,WAAW,EAAE;AALjB,SADM;AAFH,OADP;AAaJC,MAAAA,YAAY,EAAE;AACVC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CACH;AACIC,YAAAA,KAAK,EAAE;AACHC,cAAAA,WAAW,EAAE;AADV;AADX,WADG;AADH;AADE;AAbV,KADoC;AAAA;;AA2BhDC,EAAAA,iBAAiB,GAAG;AACZC,IAAAA,KAAK,CAAE,uEAAsErB,KAAK,CAACsB,oBAAqB,WAAUrB,MAAO,EAApH,CAAL,CACCsB,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOZ,IAAD,IAAU,CACZ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAtBD;AAuBP;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWC,SAAvB;AAAkC,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWS;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH;;AA3D+C,C,CA8DpD","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport { store } from '../store';\n\nconst apiKey = process.env.API_KEY;\n\nexport default class CompanyChart extends Component {\n        state = {\n            chartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: '100 Day, Daily Historical Data',\n                        data: [],\n                        fill: false,\n                        backgroundColor: 'rgb(54, 162, 235)',\n                        borderColor: 'rgba(54, 162, 235, 0.2)',\n                    },\n                ],\n            },\n            chartOptions: {\n                scales: {\n                    yAxes: [\n                        {\n                            ticks: {\n                                beginAtZero: false,\n                            },\n                        },\n                    ],\n                },\n            }\n    }\n\n    componentDidMount() {\n            fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${store.currentCompanySymbol}&apikey=${apiKey}`)\n            .then((res) => res.json())\n            .then((data) => {\n                // const objectKeys = (Object.keys(data[\"Time Series (Daily)\"])).slice(0,30)\n                // const objectData = (Object.values(data[\"Time Series (Daily)\"])).slice(0,30)\n                // const mappedData = objectData.map((closeData) => closeData[\"4. close\"])\n                // console.log(objectKeys)\n                \n                // this.setState({ \n                //     chartData: {\n                //         labels: objectKeys,\n                //         datasets: [\n                //             {\n                //                 label: '30 Day, Daily Historical Data',\n                //                 data: mappedData,\n                //                 fill: false,\n                //                 backgroundColor: 'rgb(54, 162, 235)',\n                //                 borderColor: 'rgba(54, 162, 235, 0.2)',\n                //             },\n                //         ]\n                //     }\n                // })\n            })\n    }\n\n    render() {\n        return (\n            <>\n                <Line data={this.state.chartData} options={this.state.chartOptions} />\n            </>\n        )\n    }\n}\n\n// When loading the page from scratch the chart data does not load properly."]},"metadata":{},"sourceType":"module"}