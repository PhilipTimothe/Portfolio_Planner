{"ast":null,"code":"export const getCompany = symbol => {\n  return dispatch => {\n    const apiKey = process.env.API_KEY;\n    fetch(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${symbol}&apikey=${apiKey}`).then(res => res.json()).then(data => {\n      const company = Object(data);\n      dispatch({\n        type: \"GET_COMPANY\",\n        payload: {\n          company: company\n        }\n      });\n    });\n  };\n};\nexport const getPortfolio = () => {\n  return dispatch => {\n    fetch(`http://localhost:3000/companies`).then(res => res.json()).then(data => {\n      // console.log(Object(data))\n      Object(data).map(company => dispatch({\n        type: \"GET_PORTFOLIO\",\n        payload: {\n          company\n        }\n      }));\n    });\n  };\n}; // Add companies to portfolio\n\nexport const setPortfolio = company => {\n  return dispatch => {\n    const data = {\n      Name: company[\"Name\"],\n      Symbol: company[\"Symbol\"],\n      Industry: company[\"Industry\"],\n      Country: company[\"Country\"]\n    };\n    const config = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    return fetch(`http://localhost:3000/companies`, config).then(response => response.json()).then(data => {\n      dispatch({\n        type: \"SET_PORTFOLIO\",\n        payload: {\n          data\n        }\n      });\n    });\n  };\n};\nexport const deleteCompany = companyId => {\n  return dispatch => {\n    const data = {\n      id: companyId\n    };\n    const config = {\n      method: \"DELETE\"\n    };\n    return fetch(`http://localhost:3000/companies/${companyId}`, config); // .then(response => response.json())\n    // .then((data) => console.log(data))\n    // dispatch({ \n    //     type: \"DELETE_COMPANY\",\n    //     payload: { \n    //         data\n    //     },\n    // })\n    // })\n  };\n}; // ({\n//     type: \"DELETE_COMPANY\",\n//     payload: {companyId}\n// })","map":{"version":3,"sources":["/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/redux/actionCreator.js"],"names":["getCompany","symbol","dispatch","apiKey","process","env","API_KEY","fetch","then","res","json","data","company","Object","type","payload","getPortfolio","map","setPortfolio","Name","Symbol","Industry","Country","config","method","headers","body","JSON","stringify","response","deleteCompany","companyId","id"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,MAAD,IAAY;AAClC,SAAQC,QAAD,IAAc;AACjB,UAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAA3B;AACAC,IAAAA,KAAK,CAAE,8DAA6DN,MAAO,WAAUE,MAAO,EAAvF,CAAL,CACKK,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEUG,IAAI,IAAK;AACX,YAAMC,OAAO,GAAGC,MAAM,CAACF,IAAD,CAAtB;AACAT,MAAAA,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAE;AACLH,UAAAA,OAAO,EAAEA;AADJ;AAFJ,OAAD,CAAR;AAMH,KAVL;AAWH,GAbD;AAcH,CAfM;AAmBP,OAAO,MAAMI,YAAY,GAAG,MAAM;AAC9B,SAAQd,QAAD,IAAc;AACjBK,IAAAA,KAAK,CAAE,iCAAF,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEUG,IAAI,IAAK;AACX;AACAE,MAAAA,MAAM,CAACF,IAAD,CAAN,CAAaM,GAAb,CAAkBL,OAAD,IACbV,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,OAAO,EAAE;AACLH,UAAAA;AADK;AAFJ,OAAD,CADZ;AAQH,KAZL;AAaH,GAdD;AAeH,CAhBM,C,CAkBP;;AACA,OAAO,MAAMM,YAAY,GAAIN,OAAD,IAAa;AACrC,SAAQV,QAAD,IAAc;AACjB,UAAMS,IAAI,GAAG;AACTQ,MAAAA,IAAI,EAAEP,OAAO,CAAC,MAAD,CADJ;AAETQ,MAAAA,MAAM,EAAER,OAAO,CAAC,QAAD,CAFN;AAGTS,MAAAA,QAAQ,EAAET,OAAO,CAAC,UAAD,CAHR;AAITU,MAAAA,OAAO,EAAEV,OAAO,CAAC,SAAD;AAJP,KAAb;AAOA,UAAMW,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFE;AAMXC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,IAAf;AANK,KAAf;AAQA,WAAOJ,KAAK,CAAE,iCAAF,EAAoCgB,MAApC,CAAL,CACEf,IADF,CACOqB,QAAQ,IAAIA,QAAQ,CAACnB,IAAT,EADnB,EAEEF,IAFF,CAEQG,IAAD,IAAU;AACZT,MAAAA,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,OAAO,EAAE;AACLJ,UAAAA;AADK;AAFJ,OAAD,CAAR;AAMH,KATF,CAAP;AAUH,GA1BD;AA2BH,CA5BM;AA8BP,OAAO,MAAMmB,aAAa,GAAIC,SAAD,IAAe;AACxC,SAAQ7B,QAAD,IAAc;AACjB,UAAMS,IAAI,GAAG;AACTqB,MAAAA,EAAE,EAAED;AADK,KAAb;AAGA,UAAMR,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE;AADG,KAAf;AAGA,WAAOjB,KAAK,CAAE,mCAAkCwB,SAAU,EAA9C,EAAiDR,MAAjD,CAAZ,CAPiB,CAQT;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACJ;AACX,GAjBD;AAkBH,CAnBM,C,CAwBP;AACA;AACA;AACA","sourcesContent":["export const getCompany = (symbol) => {\n    return (dispatch) => {\n        const apiKey = process.env.API_KEY;\n        fetch(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${symbol}&apikey=${apiKey}`)\n            .then((res) => res.json())\n            .then(data =>  {\n                const company = Object(data);\n                dispatch({ \n                    type: \"GET_COMPANY\",\n                    payload: { \n                        company: company\n                    },\n                })\n            })\n    }\n}\n\n\n\nexport const getPortfolio = () => {\n    return (dispatch) => {\n        fetch(`http://localhost:3000/companies`)\n            .then((res) => res.json())\n            .then(data =>  {\n                // console.log(Object(data))\n                Object(data).map((company) => (\n                    dispatch({ \n                        type: \"GET_PORTFOLIO\",\n                        payload: { \n                            company\n                        },\n                    })\n                ))\n            })\n    }\n}\n\n// Add companies to portfolio\nexport const setPortfolio = (company) => {\n    return (dispatch) => {\n        const data = {\n            Name: company[\"Name\"],\n            Symbol: company[\"Symbol\"],\n            Industry: company[\"Industry\"],\n            Country: company[\"Country\"]\n        };\n\n        const config = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        };\n        return fetch(`http://localhost:3000/companies`, config)\n                .then(response => response.json())\n                .then((data) => {\n                    dispatch({ \n                        type: \"SET_PORTFOLIO\",\n                        payload: { \n                            data\n                        },\n                    })\n                })\n    }\n}\n\nexport const deleteCompany = (companyId) => {\n    return (dispatch) => {\n        const data = {\n            id: companyId\n        };\n        const config = {\n            method: \"DELETE\",\n        };\n        return fetch(`http://localhost:3000/companies/${companyId}`, config)\n                // .then(response => response.json())\n                // .then((data) => console.log(data))\n                    // dispatch({ \n                    //     type: \"DELETE_COMPANY\",\n                    //     payload: { \n                    //         data\n                    //     },\n                    // })\n                // })\n    }\n}\n\n\n\n\n// ({\n//     type: \"DELETE_COMPANY\",\n//     payload: {companyId}\n// })\n"]},"metadata":{},"sourceType":"module"}