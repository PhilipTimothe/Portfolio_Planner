{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/containers/CompanySearchContainer.js\";\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { CompanySearchForm } from '../components/CompanySearchForm';\nimport { CompanyCard } from '../components/CompanyCard';\nimport { CompanyOverview } from '../components/CompanyOverview';\nimport { store } from '../store'; // Have to figure out how to get routed page to render.\n\nconst apiKey = process.env.API_KEY;\nexport default class CompanySearchContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      symbol: \"\",\n      searchResultsList: [],\n      currentCompany: [],\n      validated: false\n    };\n\n    this.handleSearchFormChange = event => {\n      this.setState({\n        symbol: event.target.value\n      });\n    };\n\n    this.handleSearchFormSubmit = event => {\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false && this.state.symbol === '') {\n        event.preventDefault();\n        event.stopPropagation();\n      } else {\n        event.preventDefault();\n        fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${this.state.symbol}&apikey=${apiKey}`).then(res => res.json()).then(data => {\n          const companies = Object(data.bestMatches);\n          this.setState({\n            searchResultsList: companies,\n            validated: true\n          });\n        });\n      }\n    };\n  }\n\n  renderCompanyList() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.searchResultsList.map(company => /*#__PURE__*/_jsxDEV(CompanyCard, {\n        id: uuidv4(),\n        companySymbol: company[\"1. symbol\"],\n        companyName: company[\"2. name\"],\n        companyType: company[\"3. type\"],\n        companyRegion: company[\"4. region\"],\n        companyCurrency: company[\"8. currency\"],\n        handleExploreClick: this.handleCompanySelection\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false);\n  } // renderSelectedCompany() {\n  //     return (\n  //         <>\n  //             {this.state.currentCompany.map((company) => (\n  //                 <CompanyOverview\n  //                     key={uuidv4()}\n  //                     id={uuidv4()}\n  //                     symbol={company[\"Symbol\"]} \n  //                     name={company[\"Name\"]}\n  //                     industry={company[\"Industry\"]}\n  //                     assetType={company[\"AssetType\"]}\n  //                     currency={company[\"Currency\"]}\n  //                     exchange={company[\"Exchange\"]}\n  //                     country={company[\"Country\"]}\n  //                     sector={company[\"Sector\"]}\n  //                     address={company[\"Address\"]}\n  //                     description={company[\"Description\"]}\n  //                     handleAddToPortfolio={this.handlePortfolio}\n  //                 />\n  //             ))}\n  //         </>\n  //     )\n  // }\n\n\n  // handleCompanySelection = (companyInfo, event) => {\n  //     this.setState({\n  //         currentCompany: []\n  //     })\n  //     event.preventDefault();\n  //     fetch(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${companyInfo[\"companySymbol\"]}&apikey=${apiKey}`)\n  //         .then((res) => res.json())\n  //         .then(data => // store.currentCompany.push(Object(data)));\n  //             {\n  //             const company = Object(data);\n  //             this.setState({ \n  //                 currentCompany: [...this.state.currentCompany, company]\n  //             })\n  //             store.currentCompanySymbol += company[\"Symbol\"]\n  //             // console.log(store.currentCompanySymbol)\n  //         })\n  // }\n  handlePortfolio(companyInfo) {\n    store.currentPortfolio.push(companyInfo);\n    console.log(store.currentPortfolio);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CompanySearchForm, {\n        onSubmit: this.handleSearchFormSubmit,\n        validated: this.state.validated,\n        value: this.state.symbol,\n        onChange: this.handleSearchFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.currentCompany.length > 0 && this.renderSelectedCompany(), this.renderCompanyList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/containers/CompanySearchContainer.js"],"names":["React","Component","v4","uuidv4","CompanySearchForm","CompanyCard","CompanyOverview","store","apiKey","process","env","API_KEY","CompanySearchContainer","state","symbol","searchResultsList","currentCompany","validated","handleSearchFormChange","event","setState","target","value","handleSearchFormSubmit","form","currentTarget","checkValidity","preventDefault","stopPropagation","fetch","then","res","json","data","companies","Object","bestMatches","renderCompanyList","map","company","handleCompanySelection","handlePortfolio","companyInfo","currentPortfolio","push","console","log","render","length","renderSelectedCompany"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { CompanySearchForm } from '../components/CompanySearchForm';\nimport { CompanyCard } from '../components/CompanyCard';\nimport { CompanyOverview } from '../components/CompanyOverview';\nimport { store } from '../store';\n\n// Have to figure out how to get routed page to render.\n\nconst apiKey = process.env.API_KEY;\n\nexport default class CompanySearchContainer extends Component {\n    state = {\n          symbol: \"\",\n          searchResultsList: [],\n          currentCompany: [],\n          validated: false,\n    }\n\n    renderCompanyList() {\n        return (\n            <>\n                {this.state.searchResultsList.map((company) => (\n                    <CompanyCard \n                        key={uuidv4()}\n                        id={uuidv4()}\n                        companySymbol={company[\"1. symbol\"]} \n                        companyName={company[\"2. name\"]}\n                        companyType={company[\"3. type\"]}\n                        companyRegion={company[\"4. region\"]}\n                        companyCurrency={company[\"8. currency\"]}\n                        handleExploreClick={this.handleCompanySelection}\n                    />\n                ))}\n            </>\n        )\n    }\n\n    // renderSelectedCompany() {\n    //     return (\n    //         <>\n    //             {this.state.currentCompany.map((company) => (\n    //                 <CompanyOverview\n    //                     key={uuidv4()}\n    //                     id={uuidv4()}\n    //                     symbol={company[\"Symbol\"]} \n    //                     name={company[\"Name\"]}\n    //                     industry={company[\"Industry\"]}\n    //                     assetType={company[\"AssetType\"]}\n    //                     currency={company[\"Currency\"]}\n    //                     exchange={company[\"Exchange\"]}\n    //                     country={company[\"Country\"]}\n    //                     sector={company[\"Sector\"]}\n    //                     address={company[\"Address\"]}\n    //                     description={company[\"Description\"]}\n    //                     handleAddToPortfolio={this.handlePortfolio}\n    //                 />\n    //             ))}\n    //         </>\n    //     )\n    // }\n\n    handleSearchFormChange = event => {\n        this.setState({\n            symbol: event.target.value\n        })\n    }\n\n    handleSearchFormSubmit = event => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false && this.state.symbol === '') {\n            event.preventDefault();\n            event.stopPropagation();\n\n        } else {\n\n        event.preventDefault();\n        fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${this.state.symbol}&apikey=${apiKey}`)\n            .then((res) => res.json())\n            .then(data => {\n                const companies = Object(data.bestMatches);\n                this.setState({ \n                    searchResultsList: companies,\n                    validated: true\n                })\n            })\n        }\n    }\n\n    // handleCompanySelection = (companyInfo, event) => {\n    //     this.setState({\n    //         currentCompany: []\n    //     })\n    //     event.preventDefault();\n    //     fetch(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${companyInfo[\"companySymbol\"]}&apikey=${apiKey}`)\n    //         .then((res) => res.json())\n    //         .then(data => // store.currentCompany.push(Object(data)));\n    //             {\n    //             const company = Object(data);\n    //             this.setState({ \n    //                 currentCompany: [...this.state.currentCompany, company]\n    //             })\n    //             store.currentCompanySymbol += company[\"Symbol\"]\n    //             // console.log(store.currentCompanySymbol)\n    //         })\n            \n    // }\n\n    handlePortfolio(companyInfo) {\n        store.currentPortfolio.push(companyInfo);\n        console.log(store.currentPortfolio)\n    }\n\n    render() {\n        return (\n            <>\n                <CompanySearchForm \n                    onSubmit={this.handleSearchFormSubmit}\n                    validated={this.state.validated}\n                    value={this.state.symbol}\n                    onChange={this.handleSearchFormChange}\n                />\n                <div>\n                    {this.state.currentCompany.length > 0 && this.renderSelectedCompany()}\n                    {this.renderCompanyList()}\n                </div>\n            </>\n        );\n    };\n}"]},"metadata":{},"sourceType":"module"}