{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/containers/CompanyChartContainer.js\";\nimport React, { Component } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport { connect } from 'react-redux';\nconst apiKey = process.env.API_KEY;\n\nclass CompanyChartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: '100 Day, Daily Historical Data',\n          data: [],\n          fill: false,\n          backgroundColor: 'rgb(54, 162, 235)',\n          borderColor: 'rgba(54, 162, 235, 0.2)'\n        }]\n      },\n      chartOptions: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: false\n            }\n          }]\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props;\n\n    if (!id) {\n      return;\n    }\n\n    fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${id}&apikey=${apiKey}`).then(res => res.json()).then(data => {\n      const objectKeys = Object.keys(data[\"Time Series (Daily)\"]).slice(0, 30).sort((a, b) => a > b ? 1 : -1);\n      const objectData = Object.values(data[\"Time Series (Daily)\"]);\n      const mappedData = objectData.map(closeData => closeData[\"4. close\"]).slice(0, 30).reverse(); // console.log(mappedData)\n\n      this.setState({\n        chartData: {\n          labels: objectKeys,\n          datasets: [{\n            label: '30 Day Historical Data',\n            data: mappedData,\n            fill: false,\n            backgroundColor: 'rgb(54, 162, 235)',\n            borderColor: 'rgba(54, 162, 235, 0.2)'\n          }]\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: this.state.chartData,\n        options: this.state.chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentCompanySymbol: state.currentCompanySymbol\n});\n\nexport default connect(mapStateToProps)(CompanyChartContainer); // When loading the page from scratch the chart data does not load properly.","map":{"version":3,"sources":["/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/containers/CompanyChartContainer.js"],"names":["React","Component","Line","connect","apiKey","process","env","API_KEY","CompanyChartContainer","state","chartData","labels","datasets","label","data","fill","backgroundColor","borderColor","chartOptions","scales","yAxes","ticks","beginAtZero","componentDidMount","id","props","fetch","then","res","json","objectKeys","Object","keys","slice","sort","a","b","objectData","values","mappedData","map","closeData","reverse","setState","render","mapStateToProps","currentCompanySymbol"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAA3B;;AAEA,MAAMC,qBAAN,SAAoCP,SAApC,CAA8C;AAAA;AAAA;AAAA,SACtCQ,KADsC,GAC9B;AACJC,MAAAA,SAAS,EAAE;AACPC,QAAAA,MAAM,EAAE,EADD;AAEPC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,gCADX;AAEIC,UAAAA,IAAI,EAAE,EAFV;AAGIC,UAAAA,IAAI,EAAE,KAHV;AAIIC,UAAAA,eAAe,EAAE,mBAJrB;AAKIC,UAAAA,WAAW,EAAE;AALjB,SADM;AAFH,OADP;AAaJC,MAAAA,YAAY,EAAE;AACVC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CACH;AACIC,YAAAA,KAAK,EAAE;AACHC,cAAAA,WAAW,EAAE;AADV;AADX,WADG;AADH;AADE;AAbV,KAD8B;AAAA;;AA2B1CC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAApB;;AAEA,QAAI,CAACD,EAAL,EAAS;AACT;AACC;;AAEGE,IAAAA,KAAK,CAAE,uEAAsEF,EAAG,WAAUpB,MAAO,EAA5F,CAAL,CACCuB,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOb,IAAD,IAAU;AACZ,YAAMgB,UAAU,GAAIC,MAAM,CAACC,IAAP,CAAYlB,IAAI,CAAC,qBAAD,CAAhB,CAAD,CAA2CmB,KAA3C,CAAiD,CAAjD,EAAmD,EAAnD,EAAuDC,IAAvD,CAA4D,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAlF,CAAnB;AACA,YAAMC,UAAU,GAAIN,MAAM,CAACO,MAAP,CAAcxB,IAAI,CAAC,qBAAD,CAAlB,CAApB;AACA,YAAMyB,UAAU,GAAGF,UAAU,CAACG,GAAX,CAAgBC,SAAD,IAAeA,SAAS,CAAC,UAAD,CAAvC,EAAqDR,KAArD,CAA2D,CAA3D,EAA6D,EAA7D,EAAiES,OAAjE,EAAnB,CAHY,CAIZ;;AAEA,WAAKC,QAAL,CAAc;AACVjC,QAAAA,SAAS,EAAE;AACPC,UAAAA,MAAM,EAAEmB,UADD;AAEPlB,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,KAAK,EAAE,wBADX;AAEIC,YAAAA,IAAI,EAAEyB,UAFV;AAGIxB,YAAAA,IAAI,EAAE,KAHV;AAIIC,YAAAA,eAAe,EAAE,mBAJrB;AAKIC,YAAAA,WAAW,EAAE;AALjB,WADM;AAFH;AADD,OAAd;AAcH,KAtBD;AAuBP;;AAED2B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACK,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWC,SAAvB;AAAkC,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWS;AAAtD;AAAA;AAAA;AAAA;AAAA;AADL,qBADJ;AAKH;;AAjEyC;;AAoE9C,MAAM2B,eAAe,GAAIpC,KAAD,KAAY;AAChCqC,EAAAA,oBAAoB,EAAErC,KAAK,CAACqC;AADI,CAAZ,CAAxB;;AAIA,eAAe3C,OAAO,CAAC0C,eAAD,CAAP,CAA0BrC,qBAA1B,CAAf,C,CAEA","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport {connect} from 'react-redux'\n\nconst apiKey = process.env.API_KEY;\n\nclass CompanyChartContainer extends Component {\n        state = {\n            chartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: '100 Day, Daily Historical Data',\n                        data: [],\n                        fill: false,\n                        backgroundColor: 'rgb(54, 162, 235)',\n                        borderColor: 'rgba(54, 162, 235, 0.2)',\n                    },\n                ],\n            },\n            chartOptions: {\n                scales: {\n                    yAxes: [\n                        {\n                            ticks: {\n                                beginAtZero: false,\n                            },\n                        },\n                    ],\n                },\n            }\n    }\n\n    componentDidMount() {\n        const { id } = this.props;\n\n        if (!id) {\n        return;\n        }\n\n            fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${id}&apikey=${apiKey}`)\n            .then((res) => res.json())\n            .then((data) => {\n                const objectKeys = (Object.keys(data[\"Time Series (Daily)\"])).slice(0,30).sort((a,b)=> (a > b ? 1 : -1))\n                const objectData = (Object.values(data[\"Time Series (Daily)\"]))\n                const mappedData = objectData.map((closeData) => closeData[\"4. close\"]).slice(0,30).reverse()\n                // console.log(mappedData)\n\n                this.setState({ \n                    chartData: {\n                        labels: objectKeys,\n                        datasets: [\n                            {\n                                label: '30 Day Historical Data',\n                                data: mappedData,\n                                fill: false,\n                                backgroundColor: 'rgb(54, 162, 235)',\n                                borderColor: 'rgba(54, 162, 235, 0.2)',\n                            },\n                        ]\n                    }\n                })\n            })\n    }\n\n    render() {\n        return (\n            <>\n                {<Line data={this.state.chartData} options={this.state.chartOptions} />}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    currentCompanySymbol: state.currentCompanySymbol,\n})\n\nexport default connect(mapStateToProps) (CompanyChartContainer)\n\n// When loading the page from scratch the chart data does not load properly."]},"metadata":{},"sourceType":"module"}