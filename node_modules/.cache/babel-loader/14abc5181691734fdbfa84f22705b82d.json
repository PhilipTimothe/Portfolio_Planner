{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/containers/CompanyContainer.js\";\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { SearchForm } from '../components/CompanyForm';\nimport { Company } from '../components/CompanyCard'; // component needs to provide a search form, then display any search results after input is sumbitted.\n// results list should save information to state but only show current search results\n// on submit form information needs to be fetched\n\nconst apiKey = process.env.API_KEY; // const BASE_URL =\n//   'https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=' +\n//   `api-key=${NYT_API_KEY}&query=`;\n\nexport default class CompanySearchForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      symbol: \"\",\n      searchResultsList: [],\n      currentCompany: []\n    };\n\n    this.handleSearchFormChange = event => {\n      this.setState({\n        symbol: event.target.value\n      });\n    };\n\n    this.handleSearchFormSubmit = event => {\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n        fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${this.state.symbol}&apikey=${apiKey}`).then(res => res.json()).then(data => {\n          const companies = Object(data.bestMatches);\n          this.setState({\n            searchResultsList: companies\n          });\n        });\n      }\n\n      setValidated(true);\n    };\n\n    this.handleCompanySelection = companyInfo => {\n      fetch(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${companyInfo[\"companySymbol\"]}&apikey=${apiKey}`).then(res => res.json()) // .then((data) => console.log(data))\n      .then(data => {\n        const company = Object(data);\n        this.setState({\n          currentCompany: company\n        });\n      });\n    };\n  }\n\n  renderCompanyList() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.searchResultsList.map(company => /*#__PURE__*/_jsxDEV(Company, {\n        id: uuidv4(),\n        companySymbol: company[\"1. symbol\"],\n        companyName: company[\"2. name\"],\n        companyType: company[\"3. type\"],\n        companyRegion: company[\"4. region\"],\n        companyCurrency: company[\"8. currency\"],\n        handleExploreClick: this.handleCompanySelection\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n        onSubmit: this.handleSearchFormSubmit,\n        value: this.state.symbol,\n        onChange: this.handleSearchFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderCompanyList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/containers/CompanyContainer.js"],"names":["React","Component","v4","uuidv4","SearchForm","Company","apiKey","process","env","API_KEY","CompanySearchForm","state","symbol","searchResultsList","currentCompany","handleSearchFormChange","event","setState","target","value","handleSearchFormSubmit","form","currentTarget","checkValidity","preventDefault","stopPropagation","fetch","then","res","json","data","companies","Object","bestMatches","setValidated","handleCompanySelection","companyInfo","company","renderCompanyList","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { SearchForm } from '../components/CompanyForm';\nimport { Company } from '../components/CompanyCard';\n\n// component needs to provide a search form, then display any search results after input is sumbitted.\n// results list should save information to state but only show current search results\n// on submit form information needs to be fetched\n\nconst apiKey = process.env.API_KEY;\n// const BASE_URL =\n//   'https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=' +\n//   `api-key=${NYT_API_KEY}&query=`;\n\nexport default class CompanySearchForm extends Component {\n    state = {\n          symbol: \"\",\n          searchResultsList: [],\n          currentCompany: []\n    }\n\n    renderCompanyList() {\n        return (\n            <>\n                {this.state.searchResultsList.map((company) => (\n                    <Company \n                        key={uuidv4()}\n                        id={uuidv4()}\n                        companySymbol={company[\"1. symbol\"]} \n                        companyName={company[\"2. name\"]}\n                        companyType={company[\"3. type\"]}\n                        companyRegion={company[\"4. region\"]}\n                        companyCurrency={company[\"8. currency\"]}\n                        handleExploreClick={this.handleCompanySelection}\n                    />\n                ))}\n            </>\n        )\n    }\n\n    handleSearchFormChange = event => {\n        this.setState({\n            symbol: event.target.value\n        })\n    }\n\n    handleSearchFormSubmit = event => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n        \n        fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${this.state.symbol}&apikey=${apiKey}`)\n            .then((res) => res.json())\n            .then(data => {\n                const companies = Object(data.bestMatches);\n                this.setState({ \n                    searchResultsList: companies\n                })\n            })\n        }\n        setValidated(true);\n    }\n\n    handleCompanySelection = (companyInfo) => {\n        fetch(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${companyInfo[\"companySymbol\"]}&apikey=${apiKey}`)\n            .then((res) => res.json())\n            // .then((data) => console.log(data))\n            .then(data => {\n                const company = Object(data);\n                this.setState({ \n                    currentCompany: company\n                })\n            })\n    }\n\n    render() {\n        return (\n            <>\n                <SearchForm \n                    onSubmit={this.handleSearchFormSubmit}\n                    value={this.state.symbol}\n                    onChange={this.handleSearchFormChange}\n                />\n                <div>\n                    {this.renderCompanyList()}\n                </div>\n            </>\n        );\n    };\n}"]},"metadata":{},"sourceType":"module"}