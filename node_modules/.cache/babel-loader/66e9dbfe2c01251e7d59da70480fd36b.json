{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nconst initialState = {\n  currentCompany: {},\n  currentPortfolio: []\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_COMPANY\":\n      return { ...state,\n        currentCompany: {\n          id: uuidv4(),\n          ...action.payload.company\n        }\n      };\n\n    case \"GET_PORTFOLIO\":\n      const companies = [...state.currentPortfolio, action.payload.company];\n      const result = Array.from(new Set(companies.map(s => s.id))).map(id => {\n        return {\n          id: id,\n          Symbol: companies.find(s => s.id === id).Symbol\n        };\n      });\n      return { ...state,\n        currentPortfolio: companies\n      };\n\n    case \"SET_PORTFOLIO\":\n      return { ...state,\n        currentPortfolio: [...state.currentPortfolio, action.payload.company]\n      };\n\n    case \"DELETE_COMPANY\":\n      return { ...state,\n        currentPortfolio: [...state.currentPortfolio.filter(company => company[\"id\"] !== action.payload.companyId)]\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/redux/reducer.js"],"names":["v4","uuidv4","initialState","currentCompany","currentPortfolio","reducer","state","action","type","id","payload","company","companies","result","Array","from","Set","map","s","Symbol","find","filter","companyId"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,EADC;AAEjBC,EAAAA,gBAAgB,EAAE;AAFD,CAArB;AAKA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,aAAO,EACH,GAAGF,KADA;AACOH,QAAAA,cAAc,EAAE;AAACM,UAAAA,EAAE,EAAER,MAAM,EAAX;AAAe,aAAGM,MAAM,CAACG,OAAP,CAAeC;AAAjC;AADvB,OAAP;;AAIJ,SAAK,eAAL;AACI,YAAMC,SAAS,GAAG,CAAC,GAAGN,KAAK,CAACF,gBAAV,EAA4BG,MAAM,CAACG,OAAP,CAAeC,OAA3C,CAAlB;AACA,YAAME,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQJ,SAAS,CAACK,GAAV,CAAcC,CAAC,IAAIA,CAAC,CAACT,EAArB,CAAR,CAAX,EACVQ,GADU,CACNR,EAAE,IAAI;AACP,eAAO;AACHA,UAAAA,EAAE,EAAEA,EADD;AAEHU,UAAAA,MAAM,EAAEP,SAAS,CAACQ,IAAV,CAAeF,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASA,EAA7B,EAAiCU;AAFtC,SAAP;AAIH,OANU,CAAf;AAOA,aAAO,EACH,GAAGb,KADA;AACOF,QAAAA,gBAAgB,EAAEQ;AADzB,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGN,KADA;AACOF,QAAAA,gBAAgB,EAAE,CAAC,GAAGE,KAAK,CAACF,gBAAV,EAA4BG,MAAM,CAACG,OAAP,CAAeC,OAA3C;AADzB,OAAP;;AAIJ,SAAK,gBAAL;AAEI,aAAO,EACH,GAAGL,KADA;AACOF,QAAAA,gBAAgB,EAAE,CAAC,GAAGE,KAAK,CAACF,gBAAN,CAAuBiB,MAAvB,CAA8BV,OAAO,IAAIA,OAAO,CAAC,IAAD,CAAP,KAAkBJ,MAAM,CAACG,OAAP,CAAeY,SAA1E,CAAJ;AADzB,OAAP;;AAKJ;AAAS,aAAO,EAAC,GAAGhB;AAAJ,OAAP;AA/Bb;AAkCH,CAnCM","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nconst initialState = {\n    currentCompany: {},\n    currentPortfolio: [],\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case \"GET_COMPANY\":\n            return {\n                ...state, currentCompany: {id: uuidv4(), ...action.payload.company},\n            }\n\n        case \"GET_PORTFOLIO\":\n            const companies = [...state.currentPortfolio, action.payload.company]\n            const result = Array.from(new Set(companies.map(s => s.id)))\n                .map(id => {\n                    return {\n                        id: id,\n                        Symbol: companies.find(s => s.id === id).Symbol\n                    };\n                });\n            return {\n                ...state, currentPortfolio: companies\n            }    \n\n        case \"SET_PORTFOLIO\":\n            return {\n                ...state, currentPortfolio: [...state.currentPortfolio, action.payload.company]\n            }\n\n        case \"DELETE_COMPANY\":\n\n            return {\n                ...state, currentPortfolio: [...state.currentPortfolio.filter(company => company[\"id\"] !== action.payload.companyId)]\n            }\n\n\n        default: return {...state}\n\n    }\n}"]},"metadata":{},"sourceType":"module"}