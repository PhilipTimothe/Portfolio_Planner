{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/containers/CompanyContainer.js\";\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { getCompany } from '../redux/actionCreator';\nimport CompanyOverview from '../components/CompanyOverview';\nconst apiKey = process.env.API_KEY;\n\nclass CompanyContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentCompany: []\n    };\n  }\n\n  renderSelectedCompany() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  componentDidMount() {\n    this.props.getCompany(this.props.currentCompanySymbol); // return (dispatch) => {\n    // fetch(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${this.props.currentCompanySymbol}&apikey=${apiKey}`)\n    //     .then((res) => res.json())\n    //     .then(data =>  \n    //         {\n    //             console.log(Object(data))\n    //         const company = Object(data);\n    //         dispatch({ \n    //             type: \"GET_COMPANY\",\n    //             payload: { \n    //                 company\n    //             },\n    //         })\n    //     })\n    // }\n  } // handlePortfolio(companyInfo) {\n  // }\n\n\n  render() {\n    console.log(this.props.currentCompanySymbol);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderSelectedCompany()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentCompanySymbol: state.currentCompanySymbol,\n  currentCompany: state.currentCompany\n});\n\nexport default connect(mapStateToProps, {\n  getCompany\n})(CompanyContainer); // this.props.currentCompany &&","map":{"version":3,"sources":["/Users/Philip/Desktop/FlatIron/Projects/Portfolio_Planner/frontend/src/containers/CompanyContainer.js"],"names":["React","Component","v4","uuidv4","connect","getCompany","CompanyOverview","apiKey","process","env","API_KEY","CompanyContainer","state","currentCompany","renderSelectedCompany","componentDidMount","props","currentCompanySymbol","render","console","log","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAA3B;;AAEA,MAAMC,gBAAN,SAA+BV,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCW,KADqC,GAC7B;AACJC,MAAAA,cAAc,EAAE;AADZ,KAD6B;AAAA;;AAKrCC,EAAAA,qBAAqB,GAAG;AAEpB,wBACI,qCADJ;AAmBH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWX,UAAX,CAAsB,KAAKW,KAAL,CAAWC,oBAAjC,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA7CoC,CA+CrC;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,oBAAvB;AAEA,wBACI;AAAA,6BACI;AAAA,kBACK,KAAKH,qBAAL;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAOH;;AA5DoC;;AAiEzC,MAAMO,eAAe,GAAIT,KAAD,KAAY;AAChCK,EAAAA,oBAAoB,EAAEL,KAAK,CAACK,oBADI;AAEhCJ,EAAAA,cAAc,EAAED,KAAK,CAACC;AAFU,CAAZ,CAAxB;;AAKA,eAAeT,OAAO,CAACiB,eAAD,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAAwCM,gBAAxC,CAAf,C,CAEA","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport {connect} from 'react-redux'\nimport { getCompany } from '../redux/actionCreator'\nimport CompanyOverview from '../components/CompanyOverview';\n\nconst apiKey = process.env.API_KEY;\n\nclass CompanyContainer extends Component {\n    state = {\n        currentCompany: [],\n    };\n\n    renderSelectedCompany() {\n\n        return (\n            <>\n                {/* <CompanyOverview\n                    key={uuidv4()}\n                    id={uuidv4()}\n                    symbol={this.props.currentCompany[\"Symbol\"]}\n                    name={this.props.currentCompany[\"Name\"]}\n                    industry={this.props.currentCompany[\"Industry\"]}\n                    assetType={this.props.currentCompany[\"AssetType\"]}\n                    currency={this.props.currentCompany[\"Currency\"]}\n                    exchange={this.props.currentCompany[\"Exchange\"]}\n                    country={this.props.currentCompany[\"Country\"]}\n                    sector={this.props.currentCompany[\"Sector\"]}\n                    address={this.props.currentCompany[\"Address\"]}\n                    description={this.props.currentCompany[\"Description\"]} \n                    // handleAddToPortfolio={this.handlePortfolio}\n                /> */}\n            </>\n        );\n    }\n\n    componentDidMount() {\n        this.props.getCompany(this.props.currentCompanySymbol)\n        // return (dispatch) => {\n        // fetch(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${this.props.currentCompanySymbol}&apikey=${apiKey}`)\n        //     .then((res) => res.json())\n        //     .then(data =>  \n        //         {\n        //             console.log(Object(data))\n        //         const company = Object(data);\n        //         dispatch({ \n        //             type: \"GET_COMPANY\",\n        //             payload: { \n        //                 company\n        //             },\n        //         })\n        //     })\n        // }\n    }\n\n    // handlePortfolio(companyInfo) {\n    // }\n\n    render() {\n        console.log(this.props.currentCompanySymbol)\n\n        return (\n            <>\n                <div>\n                    {this.renderSelectedCompany()}\n                </div>\n            </>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = (state) => ({\n    currentCompanySymbol: state.currentCompanySymbol,\n    currentCompany: state.currentCompany\n})\n\nexport default connect(mapStateToProps, {getCompany}) (CompanyContainer)\n\n// this.props.currentCompany && \n"]},"metadata":{},"sourceType":"module"}